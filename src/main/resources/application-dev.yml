spring:
  webflux:
    base-path: /technology-service
  r2dbc:
    url: r2dbc:${DB}://${DB_URL}:${DB_PORT}/${DB_SCHEMA}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  flyway:
    enabled: true
    url: jdbc:${DB}://${DB_URL}:${DB_PORT}/${DB_SCHEMA}
    user: ${DB_USERNAME}
    password: ${DB_PASSWORD}

management:
  tracing:
    sampling:
      probability: 0.0
    baggage:
      correlation:
        fields:
          - messageId
          - x-message-id
      remote-fields: messageId,x-message-id
  endpoints:
    web:
      exposure:
        include: health, metrics, loggers
      base-path: /
      path-mapping:
        health: actuator/health
        metrics: actuator/metrics
        loggers: actuator/loggers
  endpoint:
    health:
      probes:
        enabled: false
      show-details: "always"
  health:
    circuitbreakers:
      enabled: true
    diskspace:
      enabled: false
    r2dbc:
      enabled: true
    ping:
      enabled: false
    refresh:
      enabled: false
resilience4j.circuitbreaker:
  circuit-breaker-aspect-order: 1
  configs:
    default:
      register-health-indicator: true
resilience4j:
  retry:
    configs:
      default:
        maxAttempts: 3
        waitDuration: 2000ms
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2.0
        maxWaitDuration: 10000ms  # Duración máxima del backoff
        initialInterval: 500ms    # Intervalo inicial para el backoff
  bulkhead:
    configs:
      default:
        maxConcurrentCalls: 10
        maxWaitDuration: 500ms